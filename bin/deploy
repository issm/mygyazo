#!/bin/bash
source $(dirname $0)/_init

usage() {
    code=$1
    cat << USAGE
Usage:
    $0 {dev|stage|public}
USAGE
    if [ ! "$code" = "" ]; then
        exit $code
    fi
}

rsync_git_hooks() {
    p 32 "msynchronizing git hooks..."
    MODE=$1
    REMOTE_NAME=$2
    REMOTE_NAME_GREP="$1 "
    REMOTE_REPOS=$($APP_GIT config remote.$REMOTE_NAME.url)
    if [ "$REMOTE_REPOS" = "" ]; then
        p 31 "No such remote: $REMOTE_NAME"
        exit 1
    fi
    if [ ! -d $APP_BASEDIR/etc/git-hooks/$MODE ]; then
        p 31 "No such directory: $APP_BASEDIR/etc/git-hooks/$MODE"
        exit 1
    fi
    RSYNC_SRC=$APP_BASEDIR/etc/git-hooks/$MODE/
    RSYNC_DST=$REMOTE_REPOS/hooks/
    CMD_RSYNC="rsync -rtvp -e ssh $RSYNC_SRC $RSYNC_DST --delete-after"
    p 35 "$CMD_RSYNC"
    $CMD_RSYNC
}

main() {
    MODE=$1
    REMOTE_NAME=
    BRANCH_NAME=

    if [ "$MODE" = "" ]; then
        usage 1
    fi
    p 33 "MODE: $MODE"

    case $MODE in
        "dev")
            REMOTE_NAME="dev"
            BRANCH_NAME="dev"
            ;;
        "stage")
            REMOTE_NAME="stage"
            BRANCH_NAME="stage"
            ;;
        "public")
            REMOTE_NAME="public"
            BRANCH_NAME="public"
            ;;
        *)
            p 31 "unsupported mode: $MODE"
            exit 1
    esac
    p 33 "REMOTE_NAME: $REMOTE_NAME"
    p 33 "BRANCH_NAME: $BRANCH_NAME"
    if [ "$BRANCH_NAME" = "" ] ; then
        p 31 "no such branch: $BRANCH_NAME"
        exit 1
    fi
    if [ "$REMOTE_NAME" = "" ] ; then
        p 31 "no such remote: $REMOTE_NAME"
        exit 1
    fi

    rsync_git_hooks $MODE $REMOTE_NAME

    cd $APP_BASEDIR
    p 35 "$APP_GIT push -f $REMOTE_NAME $BRANCH_NAME"
    $APP_GIT push -f $REMOTE_NAME $BRANCH_NAME
}

main $*
